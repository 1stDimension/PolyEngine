digraph "Poly::CustomAlocatedObject"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="Poly::CustomAlocatedObject",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="Poly::BaseObject\<\>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_poly_1_1_base_object.html"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="Poly::Dynarray\< char \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_dynarray.html"];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="Poly::Dynarray\< PhaseUpdate\lFunction \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_dynarray.html"];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="Poly::Dynarray\< Poly\l::ComponentBase *\>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_dynarray.html"];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="Poly::Dynarray\< Poly\l::Mesh::TextCoord \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_dynarray.html"];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="Poly::Dynarray\< Poly\l::Mesh::Vector3D \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_dynarray.html"];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="Poly::Dynarray\< Poly\l::MeshResource::SubMesh *\>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_dynarray.html"];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="Poly::Dynarray\< Poly\l::TransformComponent *\>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_dynarray.html"];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="Poly::Dynarray\< uint32_t \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_dynarray.html"];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="Poly::EnumArray\< bool,\l eKey \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_enum_array.html"];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="Poly::EnumArray\< GLuint,\l eBufferType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_enum_array.html"];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="Poly::EnumArray\< Poly\l::GLShaderProgram *,\l eShaderProgramType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_enum_array.html"];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="Poly::AABox",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_a_a_box.html",tooltip="Class representing axis aligned box."];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="Poly::Color",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_color.html",tooltip="Class representing RGBA color."];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="Poly::ComponentBase",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_poly_1_1_component_base.html",tooltip="Base type for every component type"];
  Node1 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="Poly::Console",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_console.html"];
  Node1 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="Poly::DeferredTaskBase",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_poly_1_1_deferred_task_base.html"];
  Node1 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="Poly::Dynarray\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_dynarray.html",tooltip="Dynarray is a vector based container thet allocates its memory in one, continous block. This should be the goto container for all general purpose usage. "];
  Node1 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="Poly::Dynarray\< T \>\l::ConstIterator",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_dynarray_1_1_const_iterator.html",tooltip="Dynarray&#39;s ConstIterator class provides basic random access const iterator API for traversing dynarra..."];
  Node1 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="Poly::Dynarray\< T \>\l::Iterator",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_dynarray_1_1_iterator.html",tooltip="Dynarray&#39;s Iterator class provides basic random access mutable iterator API for traversing dynarray m..."];
  Node1 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="Poly::Engine",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_engine.html",tooltip="Central part of engine. It can be obtained vis gEngine global variable."];
  Node1 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="Poly::Entity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_entity.html",tooltip="Class that represent entity inside core engine systems. Should not be used anywhere else..."];
  Node1 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="Poly::EnumArray\< T,\l E, SIZE \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_enum_array.html",tooltip="Class that enables creation of arrays that are indexed by enum."];
  Node1 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="Poly::EnumArray\< T,\l E, SIZE \>::ConstIterator",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_enum_array_1_1_const_iterator.html"];
  Node1 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="Poly::EnumArray\< T,\l E, SIZE \>::Iterator",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_enum_array_1_1_iterator.html"];
  Node1 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="Poly::EnumIterator\< E \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_enum_iterator.html",tooltip="Class that enables iteration of enum values."];
  Node1 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="Poly::FileIOException",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_file_i_o_exception.html"];
  Node1 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="Poly::GLShaderProgram",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_g_l_shader_program.html"];
  Node1 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="Poly::IGame",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_i_game.html",tooltip="Abstract class that every game has to inherit from."];
  Node1 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="Poly::IMeshDeviceProxy",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_poly_1_1_i_mesh_device_proxy.html"];
  Node1 -> Node45 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 [label="Poly::InputEvent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_poly_1_1_input_event.html"];
  Node1 -> Node46 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 [label="Poly::IRenderingDevice",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_poly_1_1_i_rendering_device.html"];
  Node1 -> Node48 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 [label="Poly::IterablePoolAllocator\l\< T \>::ConstIterator",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_iterable_pool_allocator_1_1_const_iterator.html"];
  Node1 -> Node49 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node49 [label="Poly::IterablePoolAllocator\l\< T \>::Iterator",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_iterable_pool_allocator_1_1_iterator.html"];
  Node1 -> Node50 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node50 [label="Poly::IterablePoolAllocatorBase",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_poly_1_1_iterable_pool_allocator_base.html"];
  Node1 -> Node53 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node53 [label="Poly::ITextFieldBufferDevice\lProxy",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_poly_1_1_i_text_field_buffer_device_proxy.html"];
  Node1 -> Node55 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node55 [label="Poly::ITextureDeviceProxy",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_poly_1_1_i_texture_device_proxy.html"];
  Node1 -> Node57 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node57 [label="Poly::Matrix",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_matrix.html",tooltip="Class representing 4x4 matrix in row-major order. It takes advantage of SIMD (if possible)."];
  Node1 -> Node58 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node58 [label="Poly::MatrixSkew",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_poly_1_1_matrix_skew.html",tooltip="Class representing skew in 3 dimensions of a matrix transformation."];
  Node1 -> Node59 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node59 [label="Poly::Mesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_mesh.html"];
  Node1 -> Node60 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node60 [label="Poly::MeshResource\l::SubMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_mesh_resource_1_1_sub_mesh.html"];
  Node1 -> Node61 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node61 [label="Poly::PoolAllocator\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_pool_allocator.html",tooltip="Fast pool allocator, based on: https://www.thinkmind.org/download.php?articleid=computation_tools_201..."];
  Node1 -> Node62 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node62 [label="Poly::Quaternion",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_quaternion.html",tooltip="Used to represent rotation in 3D space without facing the problems of gimbal lock."];
  Node1 -> Node63 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node63 [label="Poly::Queue\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_queue.html",tooltip="Queue is a vector based container thet allocates its memory in one, continous block and provides API ..."];
  Node1 -> Node64 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node64 [label="Poly::RefCountedBase",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_poly_1_1_ref_counted_base.html"];
  Node0 -> Node85 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node85 [label="Poly::BaseObjectLiteralType\<\>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_poly_1_1_base_object_literal_type.html"];
  Node0 -> Node89 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node89 [label="Poly::BaseObject\< TYPE \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_base_object.html",tooltip="This class is base for almost every object in the engine. It ensures that all memory management is do..."];
  Node0 -> Node90 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node90 [label="Poly::BaseObjectLiteralType\l\< TYPE \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_poly_1_1_base_object_literal_type.html",tooltip="This class is variation of BaseObject that does not introduce virtual destructor. ..."];
}
